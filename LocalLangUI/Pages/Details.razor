@page "/Details/{Id}"

@inject IExpressionData expressionData
@inject NavigationManager navManager

<h1>Expression Details</h1>

<div>
    <div>
        @if (expression is not null)
        {
            <div>
                <div>
                    <div>
                        <div>@GetUpvoteTopText()</div>
                        <span class="oi oi-caret-top"></span>
                        <div>@GetUpvoteBottomText()</div>
                    </div>
                    <div>
                        <div>@expression.DateCreated.ToString("yyyy-MM-dd")</div>
                    </div>
                </div>
                <div>
                    <div>@expression.Expression</div>
                    <div>@expression.Author.DispalyName</div>
                    <div>@expression.Description</div>
                    <div>@expression.Category?.CategoryName</div>
                </div>
                <div>
                    <button @onclick="ClosePage"></button>
                </div>
            </div>
        }
    </div>
</div>

@if (expression?.Status is not null)
{
    <div>
        <div>
            <div></div>
            <div>
                <div>
                    @expression.Status.StatusName
                </div>
                <div>
                    @((MarkupString)expression.OwnerNotes)
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private ExpressionModel expression;

    protected async override Task OnInitializedAsync()
    {
        expression = await expressionData.GetExpressionAsync(Id);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private string GetUpvoteTopText()
    {
        if (expression.UserVotes?.Count > 0)
        {
            return expression.UserVotes.Count.ToString("00");
        }
        else
        {
            return "Click To";
        }
    }

    private string GetUpvoteBottomText()
    {
        if (expression.UserVotes?.Count > 1)
        {
            return "Upvotes";
        }
        else
        {
            return "Upvote";
        }
    }
}
