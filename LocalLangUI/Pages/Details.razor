@page "/Details/{Id}"

@inject IExpressionCollection dbExpression
@inject NavigationManager navManager

<h1>Expression Details</h1>

<div>
    <div>
        @if (expression_ is not null)
        {
            <div>
                <div>
                    <div>
                        <div>@GetLikeTopText()</div>
                        <span class="oi oi-caret-top"></span>
                        <div>@GetLikeBottomText()</div>
                    </div>
                    <div>
                        <div>@expression_.DateCreated.ToString(ConfigurationExtensions.DateFormat)</div>
                    </div>
                </div>
                <div>
                    <div>@expression_.Word</div>
                    <div>@expression_.Translation</div>
                    <div>@expression_.Category</div>
                </div>
                <div>
                    <button @onclick="ClosePage"></button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private Expression expression_;

    protected async override Task OnInitializedAsync()
    {
        expression_ = await dbExpression.GetAsync(Id);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private string GetLikeTopText()
    {
        return expression_.Likes > 0 ? expression_.Likes.ToString("00") : "Click To";
    }

    private string GetLikeBottomText()
    {
        return expression_.Likes > 1 ? "Likes" : "Like";
    }
}
